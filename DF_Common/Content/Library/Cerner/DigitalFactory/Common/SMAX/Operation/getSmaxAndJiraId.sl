namespace: Cerner.DigitalFactory.Common.SMAX.Operation
operation:
  name: getSmaxAndJiraId
  inputs:
    - MP_jiraIssueURL: "${get_sp('MarketPlace.jiraIssueURL')}"
    - MP_jiraUser: "${get_sp('MarketPlace.jiraUser')}"
    - MP_jiraPassword: "${get_sp('MarketPlace.jiraPassword')}"
    - smax_tenantId: "${get_sp('MarketPlace.tenantID')}"
    - smax_Url: "${get_sp('MarketPlace.smaxURL')}"
    - smax_Token
    - smax_request_id_list:
        required: false
    - projectNames: "${get_sp('MarketPlace.jiraProjects')}"
    - creator: "${get_sp('MarketPlace.jiraIssueCreator')}"
    - smax_FieldID
    - lastUpdateJira:
        required: false
    - lastUpdateSmax:
        required: false
    - conn_timeout: "${get_sp('Cerner.DigitalFactory.connection_timeout')}"
    - http_fail_status_codes: "${get_sp('Cerner.DigitalFactory.http_fail_status_codes')}"
  python_action:
    use_jython: false
    script: "###############################################################\r\n#   OO operation for fetch jira ID for smax_request_id_list\r\n#   Author: Sirisha Krishna Yalam(SY091463@cerner.net)\r\n#   Inputs:\r\n#       -  MP_jiraIssueURL\r\n#       -  MP_jiraUser\r\n#       -  MP_jiraPassword\r\n#       -  smax_tenantId\r\n#       -  smax_Url\r\n#       -  smax_Token\r\n#       -  smax_request_id_list\r\n#       -  projectNames\r\n#       -  creator\r\n#       -  lastUpdateJira\r\n#       -  lastUpdateSmax\r\n#       -  smax_FieldID\r\n#       -  conn_timeout\r\n#   Outputs:\r\n#       - result\r\n#       - message\r\n#       - errorType\r\n#       - errorMessage\r\n#       - errorSeverity\r\n#       - errorProvider\r\n#       - smax_jirasmaxid_list\r\n#       - jira_smaxjiraid_list\r\n#       - provider_failure\r\n#       - errorLogs\r\n################################################################\r\nimport sys, os\r\nimport subprocess\r\n# function do download external modules to python \"on-the-fly\"\r\ndef install(param):\r\n    message = \"\"\r\n    result = \"\"\r\n    errorType = \"\"\r\n    errorMessage = \"\"\r\n    errorSeverity = \"\"\r\n    try:\r\n        pathname = os.path.dirname(sys.argv[0])\r\n        message = os.path.abspath(pathname)\r\n        message = subprocess.call([sys.executable, \"-m\", \"pip\", \"list\"])\r\n        message = subprocess.run([sys.executable, \"-m\", \"pip\", \"install\", param], capture_output=True)\r\n        result = \"True\"\r\n    except Exception as e:\r\n        message = e\r\n        result = \"False\"\r\n        errorType = \"e30000\"\r\n        errorMessage = message\r\n        errorSeverity = \"ERROR\"\r\n    return {\"result\": result, \"message\": message, \"errorMessage\": errorMessage, \"errorType\": errorType,\r\n            \"errorSeverity\": errorSeverity}\r\n\r\n# main function\r\ndef execute(MP_jiraIssueURL, MP_jiraUser, MP_jiraPassword, smax_tenantId, smax_Url, smax_Token, smax_request_id_list,\r\n            projectNames, creator, smax_FieldID, lastUpdateJira, lastUpdateSmax, conn_timeout,http_fail_status_codes):\r\n    message = \"\"\r\n    result = \"False\"\r\n    errorType = \"\"\r\n    errorMessage = \"\"\r\n    errorSeverity = \"\"\r\n    errorProvider = \"\"\r\n    smax_jirasmaxid_list = \"\"\r\n    jira_smaxjiraid_list = \"\"\r\n    provider_failure = \"\"\r\n    errorLogs = \"\"\r\n    reqUrl = \"\"\r\n    responseBody = \"\"\r\n    responseCode = \"\"\r\n    ProviderUrlBody = \"\"\r\n    smaxticketID =\"\"\r\n    jiraticketID = \"\"\r\n\r\n    try:\r\n        # requirement external modules\r\n        install(\"requests\")\r\n        install(\"time\")\r\n        install(\"pytz\")\r\n        import requests\r\n        import json\r\n\r\n        authHeaders = {\"TENANTID\": \"keep-alive\"}\r\n        cookies = {\"SMAX_AUTH_TOKEN\": smax_Token}\r\n        status_codes = json.loads(http_fail_status_codes)\r\n        fetchlatestUpdatedSmaxIds = getUpdatedSmaxIds(smax_Token, smax_tenantId, smax_Url, smax_request_id_list,\r\n                                                      lastUpdateSmax, conn_timeout,status_codes)\r\n        tresult = fetchlatestUpdatedSmaxIds[\"result\"]\r\n        message = fetchlatestUpdatedSmaxIds[\"message\"]\r\n        errorType = fetchlatestUpdatedSmaxIds[\"errorType\"]\r\n        errorLogs += fetchlatestUpdatedSmaxIds[\"errorLogs\"]\r\n        provider_failure = fetchlatestUpdatedSmaxIds[\"provider_failure\"]\r\n        smax_jirasmaxid_list = fetchlatestUpdatedSmaxIds[\"smax_jirasmaxid_list\"]\r\n        jira_smaxjiraid_list = fetchlatestUpdatedSmaxIds[\"jira_smaxjiraid_list\"]\r\n        if tresult == \"False\" and provider_failure == \"True\":\r\n            raise Exception(message)\r\n        if not smax_request_id_list:\r\n            fetchlatestUpdatedJiraIds = getUpdatedJiraIds(MP_jiraIssueURL, MP_jiraUser, MP_jiraPassword,\r\n                                                          projectNames, smax_FieldID, lastUpdateJira, creator,\r\n                                                          conn_timeout,status_codes)\r\n            tresult = fetchlatestUpdatedJiraIds[\"result\"]\r\n            message = fetchlatestUpdatedJiraIds[\"message\"]\r\n            errorType = fetchlatestUpdatedJiraIds[\"errorType\"]\r\n            errorLogs += fetchlatestUpdatedJiraIds[\"errorLogs\"]\r\n            provider_failure = fetchlatestUpdatedJiraIds[\"provider_failure\"]\r\n            jira_smaxjiraid_list = fetchlatestUpdatedJiraIds[\"jira_smaxjiraid_list\"]\r\n            if tresult == \"False\" and provider_failure == \"True\":\r\n                raise Exception(message)\r\n        if jira_smaxjiraid_list == \"\" and smax_jirasmaxid_list == \"\":\r\n            message = \"No recent updated issues in SMAX and JIRA \"\r\n        elif jira_smaxjiraid_list != \"\" or smax_jirasmaxid_list != \"\":\r\n            message = \"Fetched recently updated Jira and SMAX Issues\"\r\n        result = \"True\"\r\n    except Exception as e:\r\n        message = str(e)\r\n        result = \"False\"\r\n        if not errorType:\r\n            errorType = \"e20000\"\r\n        errorMessage = message\r\n        errorSeverity = \"ERROR\"\r\n        if not errorProvider:\r\n            errorProvider = \"SMAX\"\r\n        errorLogs = \"SMAXRequestId,\" + smaxticketID + \"||JiraIssueId,\" + jiraticketID + \"||ProviderUrl,\" + reqUrl + \"||ErrorProvider,SMAX||ProviderUrlBody,\" + ProviderUrlBody + \"||ErrorMessage,\" + str(message) + \", Response Code: \" + responseCode + \"|||\"\r\n    \r\n    return {\"result\": result, \"errorMessage\": errorMessage, \"message\": message,\r\n            \"jira_smaxjiraid_list\": jira_smaxjiraid_list,\r\n            \"smax_jirasmaxid_list\": smax_jirasmaxid_list, \"errorType\": errorType, \"errorSeverity\": errorSeverity,\r\n            \"errorProvider\": errorProvider,\"errorLogs\": errorLogs,\"provider_failure\":provider_failure}\r\n\r\n\r\ndef getUpdatedJiraIds(MP_jiraIssueURL, MP_jiraUser, MP_jiraPassword, projectNames, smax_FieldID, lastUpdateJira,\r\n                      creator,conn_timeout,status_codes):\r\n    message = \"\"\r\n    result = \"False\"\r\n    errorType = \"\"\r\n    errorMessage = \"\"\r\n    errorSeverity = \"\"\r\n    errorProvider = \"\"\r\n    jira_smaxjiraid_list = \"\"\r\n    provider_failure = \"\"\r\n    errorLogs = \"\"\r\n    reqUrl = \"\"\r\n    responseBody = \"\"\r\n    responseCode = \"\"\r\n    ProviderUrlBody = \"\"\r\n    smaxticketID =\"\"\r\n    jiraticketID = \"\"\r\n    failCodes = \"\"\r\n    \r\n    try:\r\n        import requests\r\n        import json\r\n        ids = projectNames.split(\"♪\")\r\n        if lastUpdateJira:\r\n            lastUpdateJira = lastUpdateJira[:16]\r\n\r\n        for id in ids:\r\n            reqUrl = '{0}rest/api/2/search'.format(MP_jiraIssueURL)\r\n            data = {}\r\n            if lastUpdateJira:\r\n                data[\"jql\"] = \"project='{0}' AND updated >'{1}' AND creator='{2}'\".format(id, lastUpdateJira, creator)\r\n            else:\r\n                data[\"jql\"] = \"project='{0}' AND creator='{1}'\".format(id, creator)\r\n            data[\"startAt\"] = \"0\"\r\n            data[\"maxResults\"] = \"500\"\r\n            data[\"fields\"] = [smax_FieldID, \"id\", \"project\"]\r\n            payLoad = json.dumps(data)\r\n\r\n            basicAuthCredentials = requests.auth.HTTPBasicAuth(MP_jiraUser, MP_jiraPassword)\r\n            headers = {'X-Atlassian-Token': 'no-check', 'Content-Type': 'application/json'}\r\n\r\n            response = requests.post(reqUrl, auth=basicAuthCredentials, headers=headers, data=payLoad,timeout=int(conn_timeout))\r\n            responseBody = str(response.content)\r\n            responseCode = str(response.status_code)\r\n            if response.status_code == 200:\r\n                data = response.json()\r\n                arr = data[\"issues\"]\r\n                if (data[\"total\"] == 0):\r\n                    message = \"No more recent updated in JIRA Issues\"\r\n                    result = \"True\"\r\n                else:\r\n                    for issue in arr:\r\n                        if issue[\"fields\"][\"project\"][\"key\"] == id and issue[\"fields\"][smax_FieldID]:\r\n                            jira_smaxjiraid_list += issue[\"id\"] + \"♫\" + issue[\"fields\"][smax_FieldID] + \"♪\"\r\n            else:\r\n                failCodes = status_codes['jira']\r\n                if responseCode in failCodes:\r\n                    provider_failure = \"True\"\r\n                    msg = \"Unsupported response from provider: \" + responseBody + \", Response Code: \" + responseCode\r\n                    raise Exception(msg)\r\n                else:\r\n                    result = \"False\"\r\n                    errorLogs = \"SMAXRequestId,\" + smaxticketID + \"||JiraIssueId,\" + jiraticketID + \"||ProviderUrl,\" + reqUrl + \"||ErrorProvider,JIRA||ProviderUrlBody,\" + ProviderUrlBody + \"||ErrorMessage,\" + responseBody + \": Response Code: \" + responseCode + \"|||\"\r\n        \r\n        if jira_smaxjiraid_list:\r\n            jira_smaxjiraid_list = jira_smaxjiraid_list[:-1]\r\n            message = \"Fetched recently updated Jira Issues\"\r\n            result = \"True\"\r\n        else:\r\n            result = \"True\"\r\n            message = \"No recent updated issues in JIRA\"\r\n    except Exception as e:\r\n        message = str(e)\r\n        result = \"False\"\r\n        errorType = \"e20000\"\r\n        errorMessage = message\r\n        errorSeverity = \"ERROR\"\r\n        errorProvider = \"JIRA\"\r\n        errorLogs = \"SMAXRequestId,\" + smaxticketID + \"||JiraIssueId,\" + jiraticketID + \"||ProviderUrl,\" + reqUrl + \"||ErrorProvider,JIRA||ProviderUrlBody,\" + ProviderUrlBody + \"||ErrorMessage,\" + str(message) + \": Response Code: \" + responseCode + \"|||\"\r\n    \r\n    return {\"result\": result, \"errorMessage\": errorMessage, \"message\": message,\r\n            \"jira_smaxjiraid_list\": jira_smaxjiraid_list, \"errorType\": errorType,\r\n            \"errorSeverity\": errorSeverity, \"errorProvider\": errorProvider, \"errorLogs\": errorLogs, \"provider_failure\": provider_failure}\r\n\r\n# get  smax_jirasmaxid_list\r\ndef getUpdatedSmaxIds(smax_Token, smax_tenantId, smax_Url, smax_request_id_list, lastUpdateSmax, conn_timeout,status_codes):\r\n    message = \"\"\r\n    result = \"False\"\r\n    errorType = \"\"\r\n    errorMessage = \"\"\r\n    errorSeverity = \"\"\r\n    errorProvider = \"\"\r\n    smax_jirasmaxid_list = \"\"\r\n    jira_smaxjiraid_list = \"\"\r\n    id = \"\"\r\n    smaxID = \"\"\r\n    provider_failure = \"\"\r\n    errorLogs = \"\"\r\n    reqUrl = \"\"\r\n    responseBody = \"\"\r\n    responseCode = \"\"\r\n    ProviderUrlBody = \"\"\r\n    smaxticketID =\"\"\r\n    jiraticketID = \"\"\r\n    failCodes = \"\"\r\n    \r\n    try:\r\n        import requests\r\n        import json\r\n        authHeaders = {\"TENANTID\": \"keep-alive\"}\r\n        cookies = {\"SMAX_AUTH_TOKEN\": smax_Token}\r\n\r\n        if smax_request_id_list:\r\n            smaxIDS = smax_request_id_list.split(\",\")\r\n            for smaxID in smaxIDS:\r\n                if smaxID:\r\n                    id += smaxID + \",\"\r\n            if id:\r\n                id = id[:-1]\r\n                reqUrl = smax_Url + \"/rest/\" + smax_tenantId + \"/ems/Request?layout=Id,JiraIssueId_c&filter=Id+in+(\" + id + \")\"\r\n        else:\r\n            reqUrl = smax_Url + \"/rest/\" + smax_tenantId + \"/ems/Request?layout=Id,DisplayLabel,Priority,JiraIssueId_c&filter=LastUpdateTime>\" + lastUpdateSmax\r\n        if reqUrl:\r\n            response = requests.get(reqUrl, headers=authHeaders, cookies=cookies, timeout=int(conn_timeout))\r\n            responseBody = str(response.content)\r\n            responseCode = str(response.status_code)\r\n            if response.status_code == 200:\r\n                entityJsonArray = json.loads(response.content)\r\n                if entityJsonArray[\"entities\"] == []:\r\n                    message = \"No recent issues in SMAX\"\r\n                    result = \"True\"\r\n                else:\r\n                    for entity in entityJsonArray[\"entities\"]:\r\n                        JiraIssueId = \"\"\r\n                        if 'JiraIssueId_c' in entity[\"properties\"]:\r\n                            JiraIssueId = entity[\"properties\"][\"JiraIssueId_c\"]\r\n                        if JiraIssueId:\r\n                            smax_jirasmaxid_list += entity[\"properties\"][\"JiraIssueId_c\"] + \"♫\" + entity[\"properties\"][\"Id\"] + \"♪\"\r\n                        else:\r\n                            message = \"No Jira Issue ID found for Smax Request ID : \" + entity[\"properties\"][\"Id\"]\r\n                            result = \"True\"\r\n                            continue\r\n            else:\r\n                failCodes = status_codes['smax']\r\n                if responseCode in failCodes:\r\n                    provider_failure = \"True\"\r\n                    msg = \"Unsupported response from provider: \" + responseBody + \", Response Code: \" + responseCode\r\n                    raise Exception(msg)\r\n                else:\r\n                    result = \"False\"\r\n                    errorLogs = \"SMAXRequestId,\" + smaxticketID + \"||JiraIssueId,\" + jiraticketID + \"||ProviderUrl,\" + reqUrl + \"||ErrorProvider,SMAX||ProviderUrlBody,\" + ProviderUrlBody + \"||ErrorMessage,\" + responseBody + \": Response Code: \" + responseCode + \"|||\"\r\n    \r\n        if smax_jirasmaxid_list:\r\n            smax_jirasmaxid_list = smax_jirasmaxid_list[:-1]\r\n            result = \"True\"\r\n            if smax_request_id_list:\r\n                jira_smaxjiraid_list = smax_jirasmaxid_list\r\n    except Exception as e:\r\n        message = str(e)\r\n        result = \"False\"\r\n        errorType = \"e20000\"\r\n        errorMessage = message\r\n        errorSeverity = \"ERROR\"\r\n        errorProvider = \"SMAX\"\r\n        errorLogs = \"SMAXRequestId,\" + smaxticketID + \"||JiraIssueId,\" + jiraticketID + \"||ProviderUrl,\" + reqUrl + \"||ErrorProvider,SMAX||ProviderUrlBody,\" + ProviderUrlBody + \"||ErrorMessage,\" + str(message) + \": Response Code: \" + responseCode + \"|||\"\r\n    \r\n    return {\"result\": result, \"errorMessage\": errorMessage, \"message\": message,\r\n            \"smax_jirasmaxid_list\": smax_jirasmaxid_list, \"jira_smaxjiraid_list\": jira_smaxjiraid_list,\r\n            \"errorType\": errorType,\r\n            \"errorSeverity\": errorSeverity, \"errorProvider\": errorProvider, \"errorLogs\": errorLogs, \"provider_failure\": provider_failure}"
  outputs:
    - result
    - message
    - errorType
    - errorSeverity
    - errorProvider
    - errorMessage
    - jira_smaxjiraid_list
    - smax_jirasmaxid_list
    - errorLogs
    - provider_failure
  results:
    - SUCCESS: '${result=="True"}'
    - FAILURE
